{"ast":null,"code":"/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nvar isExtglob = require('is-extglob');\n\nvar chars = {\n  '{': '}',\n  '(': ')',\n  '[': ']'\n};\nvar strictRegex = /\\\\(.)|(^!|\\*|[\\].+)]\\?|\\[[^\\\\\\]]+\\]|\\{[^\\\\}]+\\}|\\(\\?[:!=][^\\\\)]+\\)|\\([^|]+\\|[^\\\\)]+\\))/;\nvar relaxedRegex = /\\\\(.)|(^!|[*?{}()[\\]]|\\(\\?)/;\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var regex = strictRegex;\n  var match; // optionally relax regex\n\n  if (options && options.strict === false) {\n    regex = relaxedRegex;\n  }\n\n  while (match = regex.exec(str)) {\n    if (match[2]) return true;\n    var idx = match.index + match[0].length; // if an open bracket/brace/paren is escaped,\n    // set the index to the next closing character\n\n    var open = match[1];\n    var close = open ? chars[open] : null;\n\n    if (open && close) {\n      var n = str.indexOf(close, idx);\n\n      if (n !== -1) {\n        idx = n + 1;\n      }\n    }\n\n    str = str.slice(idx);\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/shubhangi/Documents/mentor-and-mentee-tracking-/node_modules/is-glob/index.js"],"names":["isExtglob","require","chars","strictRegex","relaxedRegex","module","exports","isGlob","str","options","regex","match","strict","exec","idx","index","length","open","close","n","indexOf","slice"],"mappings":"AAAA;;;;;;AAOA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIC,KAAK,GAAG;AAAE,OAAK,GAAP;AAAY,OAAK,GAAjB;AAAsB,OAAK;AAA3B,CAAZ;AACA,IAAIC,WAAW,GAAG,wFAAlB;AACA,IAAIC,YAAY,GAAG,6BAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;AAC7C,MAAI,OAAOD,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAvC,EAA2C;AACzC,WAAO,KAAP;AACD;;AAED,MAAIR,SAAS,CAACQ,GAAD,CAAb,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAIE,KAAK,GAAGP,WAAZ;AACA,MAAIQ,KAAJ,CAV6C,CAY7C;;AACA,MAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,KAAmB,KAAlC,EAAyC;AACvCF,IAAAA,KAAK,GAAGN,YAAR;AACD;;AAED,SAAQO,KAAK,GAAGD,KAAK,CAACG,IAAN,CAAWL,GAAX,CAAhB,EAAkC;AAChC,QAAIG,KAAK,CAAC,CAAD,CAAT,EAAc,OAAO,IAAP;AACd,QAAIG,GAAG,GAAGH,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAAC,CAAD,CAAL,CAASK,MAAjC,CAFgC,CAIhC;AACA;;AACA,QAAIC,IAAI,GAAGN,KAAK,CAAC,CAAD,CAAhB;AACA,QAAIO,KAAK,GAAGD,IAAI,GAAGf,KAAK,CAACe,IAAD,CAAR,GAAiB,IAAjC;;AACA,QAAIA,IAAI,IAAIC,KAAZ,EAAmB;AACjB,UAAIC,CAAC,GAAGX,GAAG,CAACY,OAAJ,CAAYF,KAAZ,EAAmBJ,GAAnB,CAAR;;AACA,UAAIK,CAAC,KAAK,CAAC,CAAX,EAAc;AACZL,QAAAA,GAAG,GAAGK,CAAC,GAAG,CAAV;AACD;AACF;;AAEDX,IAAAA,GAAG,GAAGA,GAAG,CAACa,KAAJ,CAAUP,GAAV,CAAN;AACD;;AACD,SAAO,KAAP;AACD,CAnCD","sourcesContent":["/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictRegex = /\\\\(.)|(^!|\\*|[\\].+)]\\?|\\[[^\\\\\\]]+\\]|\\{[^\\\\}]+\\}|\\(\\?[:!=][^\\\\)]+\\)|\\([^|]+\\|[^\\\\)]+\\))/;\nvar relaxedRegex = /\\\\(.)|(^!|[*?{}()[\\]]|\\(\\?)/;\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var regex = strictRegex;\n  var match;\n\n  // optionally relax regex\n  if (options && options.strict === false) {\n    regex = relaxedRegex;\n  }\n\n  while ((match = regex.exec(str))) {\n    if (match[2]) return true;\n    var idx = match.index + match[0].length;\n\n    // if an open bracket/brace/paren is escaped,\n    // set the index to the next closing character\n    var open = match[1];\n    var close = open ? chars[open] : null;\n    if (open && close) {\n      var n = str.indexOf(close, idx);\n      if (n !== -1) {\n        idx = n + 1;\n      }\n    }\n\n    str = str.slice(idx);\n  }\n  return false;\n};\n"]},"metadata":{},"sourceType":"script"}